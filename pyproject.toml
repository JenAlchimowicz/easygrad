[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
pythonpath = "."


[tool.ruff]
target-version = 'py38'
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    # "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "ISC", # flake8-implicit-str-concat
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    # "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
    "C90", # mccabe
    "A", # builtins
    "COM", # flake8-commas
    "PT", # flake8-pytest-style
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PD", # pandas-vet
]

exclude = [
    "migrations",
    "__pycache__",
    "env",
    ".env",
    "venv",
    ".venv",
]

ignore = [
    "B905",  # zip strict=True; remove once python <3.10 support is dropped.
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D205",
    "D401",
    "D407",
    "E402",
    "F401",
    "TRY003",  # Avoid specifying messages outside exception class; overly strict, especially for ValueError
    "PD901",  # df is a bad variable name
    "PD015",
    "B023",
    "PTH123",  # `open()` should be replaced by `Path.open()`
]
line-length = 120  # Must agree with Black

[tool.ruff.per-file-ignores]
"test/*.py" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "S101",  # use of "assert"
    "S102",  # use of "exec"
    "S106",  # possible hardcoded password.
    "PGH001",  # use of "eval"
]